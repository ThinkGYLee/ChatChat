{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "b715b83452582b313d4a3a25bbfc4459",
    "entities": [
      {
        "tableName": "user",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `email` TEXT NOT NULL, `name` TEXT NOT NULL, `uid` TEXT NOT NULL, `picture` TEXT NOT NULL, `status` TEXT NOT NULL, `relation` TEXT NOT NULL, `favoriteState` INTEGER NOT NULL, `verified` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uid",
            "columnName": "uid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "picture",
            "columnName": "picture",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "relation",
            "columnName": "relation",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "favoriteState",
            "columnName": "favoriteState",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "verified",
            "columnName": "verified",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "user_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`id` INTEGER NOT NULL, `name` TEXT NOT NULL, content=`user`)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": []
        },
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "user",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_user_fts_BEFORE_UPDATE BEFORE UPDATE ON `user` BEGIN DELETE FROM `user_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_user_fts_BEFORE_DELETE BEFORE DELETE ON `user` BEGIN DELETE FROM `user_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_user_fts_AFTER_UPDATE AFTER UPDATE ON `user` BEGIN INSERT INTO `user_fts`(`docid`, `id`, `name`) VALUES (NEW.`rowid`, NEW.`id`, NEW.`name`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_user_fts_AFTER_INSERT AFTER INSERT ON `user` BEGIN INSERT INTO `user_fts`(`docid`, `id`, `name`) VALUES (NEW.`rowid`, NEW.`id`, NEW.`name`); END"
        ]
      },
      {
        "tableName": "favorite",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_entity_id` INTEGER NOT NULL, `favorite_state` INTEGER NOT NULL, `favorite_number` INTEGER, FOREIGN KEY(`user_entity_id`) REFERENCES `user`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userEntityId",
            "columnName": "user_entity_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favoriteState",
            "columnName": "favorite_state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favoriteNumber",
            "columnName": "favorite_number",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_favorite_user_entity_id",
            "unique": false,
            "columnNames": [
              "user_entity_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_favorite_user_entity_id` ON `${TABLE_NAME}` (`user_entity_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_entity_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "chatroom",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `rid` TEXT NOT NULL, `lastMessage` TEXT NOT NULL, `isGroup` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rid",
            "columnName": "rid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastMessage",
            "columnName": "lastMessage",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isGroup",
            "columnName": "isGroup",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "message",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `roomId` INTEGER NOT NULL, `rid` TEXT NOT NULL, `type` TEXT NOT NULL, `writer` TEXT NOT NULL, `comment` TEXT NOT NULL, `time` INTEGER NOT NULL, `messageSendState` TEXT NOT NULL, `replyTo` TEXT, `replyComment` TEXT, `replyType` TEXT, `replyKey` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "roomId",
            "columnName": "roomId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rid",
            "columnName": "rid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "writer",
            "columnName": "writer",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "comment",
            "columnName": "comment",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "messageSendState",
            "columnName": "messageSendState",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "replyTo",
            "columnName": "replyTo",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "replyComment",
            "columnName": "replyComment",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "replyType",
            "columnName": "replyType",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "replyKey",
            "columnName": "replyKey",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "receiver",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `chatroom_entity_id` INTEGER NOT NULL, `receiver` TEXT NOT NULL, FOREIGN KEY(`chatroom_entity_id`) REFERENCES `chatroom`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userEntityId",
            "columnName": "chatroom_entity_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "receiver",
            "columnName": "receiver",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_receiver_chatroom_entity_id",
            "unique": false,
            "columnNames": [
              "chatroom_entity_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_receiver_chatroom_entity_id` ON `${TABLE_NAME}` (`chatroom_entity_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chatroom",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "chatroom_entity_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'b715b83452582b313d4a3a25bbfc4459')"
    ]
  }
}